/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { forwardRef, useRef, useMemo } from 'react'
import { useGLTF } from '@react-three/drei'
import { Vector3 } from "three";
import { GhibliShader } from "./GhibliShader";

export const Model = forwardRef((props, ref) => {
  const { nodes } = useGLTF('/3d_models/monkeys.glb')
  const uniforms = useMemo(
    () => ({
      colorMap: {
        value: props.colors,
      },
      brightnessThresholds: {
        value: [0.6, 0.35, 0.001],
      },
      lightPosition: { value: new Vector3(15, 15, 15) },
    }),
    [props.colors]
  );

  return (
    <group {...props} ref={ref} dispose={null}>
        <mesh
        castShadow
        receiveShadow
        geometry={nodes.Suzanne.geometry}
        position={[-1.313, 0, 0]}
        rotation={[-0.126, 0.546, 0.276]}
        >
        <shaderMaterial
          attach="material"
          {...GhibliShader}
          uniforms={uniforms}
        />
        </mesh>
        <mesh
        castShadow
        receiveShadow
        geometry={nodes.Suzanne001.geometry}
        position={[1.801, 0.365, -0.421]}
        rotation={[0.095, -0.356, -0.335]}
        >
        <shaderMaterial
          attach="material"
          {...GhibliShader}
          uniforms={uniforms}
        />
        </mesh>
    </group>
  )
});

useGLTF.preload('/3d_models/monkeys.glb')